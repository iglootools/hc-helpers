#
# Copyright 2009 Sami Dalouche
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# 	http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# This file is part of PyMager Java REST Client.
#
# PyMager Java REST Client is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# PyMager Java REST Client is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with PyMager Java REST Client.  If not, see <http://www.gnu.org/licenses/>.
#
# This file is part of ImgServer Java REST Client.
#
# ImgServer Java REST Client is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# ImgServer Java REST Client is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with ImgServer.  If not, see <http://www.gnu.org/licenses/>.
#
# For the general syntax of property based configuration files see the
# documenation of org.apache.log4j.PropertyConfigurator.

#log4j.rootLogger=INFO, Console, RollingFile
log4j.rootLogger=INFO, Console
log4j.logger.com.sirika = DEBUG

# A1 is set to be a ConsoleAppender which outputs to System.out. 
log4j.appender.Console=org.apache.log4j.ConsoleAppender

# A1 uses PatternLayout.
log4j.appender.Console.layout=org.apache.log4j.PatternLayout

# Example:    
# [%p] : [INFO] : priority
# [%d] : [2007-01-30 13:13:41,579] : date/time
# [%c] : [org.springframework.web.context.support.XmlWebApplicationContext] : the category/class
# (%t,%x) : (main,) : thread + optional Context Information
# %m%n : the message itself
log4j.appender.Console.layout.ConversionPattern=[%p] [%d] [%c] (%t,%x) : %m%n

# In this example, we are not really interested in INNER loop or SWAP
# messages. See the effects of uncommenting and changing the levels of
# the following loggers.
# log4j.logger.org.apache.log4j.examples.SortAlgo.INNER=WARN
# log4j.logger.org.apache.log4j.examples.SortAlgo.SWAP=WARN

log4j.appender.RollingFile=org.apache.log4j.RollingFileAppender
log4j.appender.RollingFile.File=pymager.log
log4j.appender.RollingFile.MaxFileSize=100000KB
# Keep one backup file
log4j.appender.RollingFile.MaxBackupIndex=1

log4j.appender.RollingFile.layout=org.apache.log4j.PatternLayout
log4j.appender.RollingFile.layout.ConversionPattern=[%p] [%d] [%c] (%t,%x) : %m%n